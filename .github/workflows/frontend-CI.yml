name: Frontend CI

on:
  push:
    paths:
      - 'frontend/**'
      - '!frontend/README.md' # Exclude README
  workflow_dispatch: # This event allows manual triggering

jobs:

  build-ubuntu:
    runs-on: ubuntu-20.04

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18.16.0

    - name: Install dependencies
      run: |
        cd frontend
        make install

    - name: Format code
      run: |
        cd frontend
        make format

    - name: Lint the code
      run: |
        cd frontend
        make lint

    - name: Run tests
      run: |
        cd frontend
        make test

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18.16.0

    - name: Install dependencies
      run: |
        cd frontend
        npm install

    - name: Lint the code
      run: |
        cd frontend
        npm run lint

    - name: Run tests
      run: |
        cd frontend
        npx ng test --watch=false --browsers=ChromeHeadless

  calculate-test-coverage:
    needs: build-ubuntu
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.16.0

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Install project dependencies
        run: |
          cd frontend
          npm install

      - name: Run tests with code coverage
        run: |
          cd frontend
          export COVERAGE_OUTPUT=$(npx ng test --watch=false --browsers=ChromeHeadless --code-coverage)
          echo "$COVERAGE_OUTPUT"  # Optional: You can print the output for debugging
        env:
          COVERAGE_OUTPUT: ${{ steps.calculate-coverage.outputs.coverage-output }}

      - name: Update README with coverage information
        run: |
          cd frontend
          # Extract coverage information from the COVERAGE_OUTPUT environment variable
          COVERAGE_INFO=$(echo "$COVERAGE_OUTPUT" | grep 'Statements\|Branches\|Functions\|Lines')
          echo "$COVERAGE_INFO"
          # Format the coverage information
          FORMATTED_COVERAGE=$(echo "$COVERAGE_INFO" | sed 's/^/    /')
          # Replace the placeholder in the README with the updated coverage information
          sed -i '/<!-- Coverage Report Placeholder - Start -->/,/<!-- Coverage Report Placeholder - End -->/c<!-- Coverage Report Placeholder - Start -->\n'"$FORMATTED_COVERAGE"'\n<!-- Coverage Report Placeholder - End -->' README.md
        env:
          COVERAGE_OUTPUT: ${{ steps.calculate-coverage.outputs.coverage-output }}
        working-directory: ${{ github.workspace }}

      - name: Commit and push changes to README
        run: |
          cd frontend
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add README.md
          git commit -m "Update coverage information [automated CI process by GitHub Actions]"
          git push


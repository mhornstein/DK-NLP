version: '3.8'

services:
  frontend:
    build:
      context: ../../
      dockerfile: src/frontend/Dockerfile.frontend
    image: dev-frontend-image
    command: ["build", "--source-map", "--serverUri", "localhost:3000"]
    volumes:
      - angular-dist:/app/dist
    restart: "no"
    
  server:
    build:
      context: ../../
      dockerfile: src/server/Dockerfile.server
    volumes:
      - angular-dist:/app/dist
    command: ["--taggerUri", "tagger:4000", "--dalUri", "dal:5000", "--port", "3000", "--serve-client", "--enable-api"]
    image: dev-server-image
    ports:
      - "3000:3000"
    depends_on:
      - tagger
      - dal
      - frontend
    networks:
      - dev-network

  tagger:
    build:
      context: ../../
      dockerfile: src/tagger/Dockerfile.tagger
    image: dev-tagger-image
    ports:
      - "4000:4000"
    command: ["python", "run.py", "--port", "4000", "--serve", "dev", "--enable-api"]
    networks:
      - dev-network

  dal:
    build:
      context: ../../
      dockerfile: src/dal/Dockerfile.dal
    image: dev-dal-image
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    command: ["python", "run.py", "--mongo-uri", "mongodb://mongo:27017/", "--port", "5000", "--serve", "dev", "--enable-api"]
    networks:
      - dev-network

  mongo:
    image: mongo:7.0.2
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - dev-network

volumes:
  mongo-data:
  angular-dist:

networks:
  dev-network:
    driver: bridge

